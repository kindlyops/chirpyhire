---
version: 2
jobs:
  build:
    working_directory: ~/chirpyhire
    docker:
      - image: circleci/ruby:2.6.2-node-browsers
        environment:
          RAILS_ENV: test
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLER_VERSION: 2.0.1
      - image: postgres:9.5
        name: postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: chirpyhire_test
          POSTGRES_PASSWORD: ""
      - image: circleci/redis:5.0.4-alpine
        name: redis

    steps:
      - checkout
      # Which version of bundler?
      - run: gem install bundler:2.0.1
      - run:
          name: Which bundler?
          command: bundle -v
      # Setup the environment
      - run: cp .sample.env .env
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-
      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check || bundle install --with=test

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - npm-cache-v1-{{ checksum "yarn.lock" }}
            - npm-cache-v1-
      - run:
          name: Install npm packages
          command: npm install

      - save_cache:
          key: npm-cache-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://postgres:5432 -timeout 1m

      # Setup the database
      - run: bundle exec rake db:create
      - run: bundle exec rake db:migrate
      - run: bundle exec rails assets:precompile

      # Run the tests
      - run: bundle exec rspec